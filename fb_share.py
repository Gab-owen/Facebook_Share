import base64
exec(base64.b64decode(b'aW1wb3J0IG9zLHJlLHN5cyxiczQsdGltZSxqc29uLHJhbmRvbQppbXBvcnQgZGF0ZXRpbWUscmVxdWVzdHMscmljaCxzdHJpbmcKZnJvbSBvcyBpbXBvcnQgc3lzdGVtIGFzIGxtbng5CmZyb20gcmljaCBpbXBvcnQgcHJpbnQgYXMgTG1ueDkKRFRYPXsnMSc6J2phbnVhcmknLCcyJzonZmVicnVhcmknLCczJzonbWFyZXQnLCc0JzonYXByaWwnLCc1JzonbWVpJywnNic6J2p1bmknLCc3JzonanVsaScsJzgnOidhZ3VzdHVzJywnOSc6J3NlcHRlbWJlcicsJzEwJzonb2t0b2JlcicsJzExJzonbm92ZW1iZXInLCcxMic6J2Rlc2VtYmVyJ30KdGdsPWRhdGV0aW1lLmRhdGV0aW1lLm5vdygpLmRheQpibG49RFRYWyhzdHIoZGF0ZXRpbWUuZGF0ZXRpbWUubm93KCkubW9udGgpKV0KdGhuPWRhdGV0aW1lLmRhdGV0aW1lLm5vdygpLnllYXIKbGpfbG1uPXN0cih0Z2wpKyIgIitzdHIoYmxuKSsiICIrc3RyKHRobikKc2VzPXJlcXVlc3RzLlNlc3Npb24oKQpkZWYgYXBwcm92YWwoKToKICBvcy5zeXN0ZW0oJ2NsZWFyJykKICBwcmludChjcmVkaXQpCiAgdXVpZCA9IHN0cihvcy5nZXRldWlkKCkpICsgc3RyKG9zLmdldGxvZ2luKCkpCiAgaWQgPSAiLSIuam9pbih1dWlkKQogIHRyeToKICAgIGh0dHBDYWh0ID0gcmVxdWVzdHMuZ2V0KCdodHRwczovL2dpdGh1Yi5jb20vR2FiLW93ZW4vRmFjZWJvb2tfU2hhcmUvYmxvYi9tYWluL0tleS50eHQnKS50ZXh0CiAgICBpZiBpZCBpbiBodHRwQ2FodDoKICAgICAgcHJpbnQoIlwzM1sxOzMybVlvdXIgVG9rZW4gaXMgU3VjY2Vzc2Z1bGx5IEFwcHJvdmVkXDMzWzE7MzdtIikKICAgICAgbXNnID0gc3RyKG9zLmdldGV1aWQoKSkKICAgICAgdGltZS5zbGVlcCgwLjUpCiAgICAgIG1lbnUoKQogICAgICBtZW51MSgpCiAgICAgIHBhc3MKICAgIGVsc2U6CiAgICAgIHByaW50KCJZb3VyIEtFWSA6ICIraWQpCiAgICAgIHByaW50KCdcMzNbMTszN20tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tJykKICAgICAgcHJpbnQoIlRoaXMgSXMgRnJlZSBCdXQgTmVlZCBBcHByb3ZlZCBGcm9tIEFkbWluIFRvIFVzZS4iKQogICAgICBwcmludCgiXDMzWzE7MzdtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSIpCiAgICAgIHByaW50KCdDb3B5IFlvdXIgS2V5IEFuZCBTZW5kIE1lc3NhZ2UgcmVxdWVzdHMgdG8gb3duZXInKQogICAgICBwcmludCgnXDMzWzE7MzdtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLScpCiAgICAgIGlucHV0KCdFTlRFUiBUTyBESVJFQ1RMWSAnKQogICAgICB0a3MgPSAoJ0hlbGxvJTIwU2lyJTIwISUyMFBsZWFzZSUyMEFwcHJvdmUlMjBNeSUyMFRva2VuJTIwVGhlJTIwVG9rZW4lMjBJcyUyMDolMjAnK2lkKTtvcy5zeXN0ZW0oJ2FtIHN0YXJ0IGh0dHBzOi8vd3d3LmZhY2Vib29rLmNvbS9nYWJvd2VuLjIwMDQnK3RrcyksYXBwcm92YWwoKQogICAgICB0aW1lLnNsZWVwKDEpCiAgICAgIGFwcHJvdmFsKCkKICBleGNlcHQ6CiAgICBsbW54OV9sb2dpbigpCgkKZGVmIGxtbng5X2xvZ2luKCk6CiAgICBsbW54OSgnY2xlYXInKQogICAgTG1ueDkoY3JlZGl0KQogICAgY29va2llPWlucHV0KCdb4oCiXSBMb2dpbiBGcmVzaCBDb29raWUgOiAnKQogICAgdHJ5OgogICAgICAgIGRhcmtfWEw9cmVxdWVzdHMuZ2V0KCJodHRwczovL2J1c2luZXNzLmZhY2Vib29rLmNvbS9idXNpbmVzc19sb2NhdGlvbnMiLGhlYWRlcnM9eyJ1c2VyLWFnZW50IjoiTW96aWxsYS81LjAgKExpbnV4OyBBbmRyb2lkIDguMS4wOyBNSSA4IEJ1aWxkL09QTTEuMTcxMDE5LjAxMSkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzY5LjAuMzQ5Ny44NiBNb2JpbGUgU2FmYXJpLzUzNy4zNiIsImNvb2tpZSI6Y29va2llfSkKICAgICAgICB0b2tlbj1yZS5zZWFyY2goIihFQUFHXHcrKSIsIGRhcmtfWEwudGV4dCkuZ3JvdXAoMSkKICAgICAgICBpZiAiRUFBRyIgaW4gc3RyKHRva2VuKToKICAgICAgICAgICAgb3BlbignY29va2llLnR4dCcsJ3cnKS53cml0ZShjb29raWUpCiAgICAgICAgICAgIG9wZW4oJ3Rva2VuLnR4dCcsJ3cnKS53cml0ZSh0b2tlbikKICAgICAgICAgICAgTG1ueDkoIjwvPiBMb2dpbiBTdWNjZXNzZnVsISEhICIpCiAgICAgICAgICAgIGJvdChjb29raWUpCiAgICBleGNlcHQgQXR0cmlidXRlRXJyb3I6CiAgICAgICAgTG1ueDkoIjwvPiBDb29raWUgRXhwaXJlZCAhISIpCiAgICAgICAgdGltZS5zbGVlcCg0KQogICAgICAgIGxtbng5X2xvZ2luKCkKICAgIGV4Y2VwdCByZXF1ZXN0cy5leGNlcHRpb25zLkNvbm5lY3Rpb25FcnJvcjoKICAgICAgICBleGl0KCI8Lz4gQ29ubmVjdGlvbiBFcnJvciEhISIpCmRlZiBib3QoY29va2llKToKICAgIExpakE9c3RyKGRhdGV0aW1lLmRhdGV0aW1lLm5vdygpLnN0cmZ0aW1lKCclSDolTTolUycpKQogICAgTGlNb049eydTdW5kYXknOidNaW5nZ3UnLCdNb25kYXknOidTZW5pbicsJ1R1ZXNkYXknOidTZWxhc2EnLCdXZWRuZXNkYXknOidSYWJ1JywnVGh1cnNkYXknOidLYW1pcycsJ0ZyaWRheSc6J0p1bWF0JywnU2F0dXJkYXknOidTYWJ0dSd9W3N0cihkYXRldGltZS5kYXRldGltZS5ub3coKS5zdHJmdGltZSgiJUEiKSldCiAgICBrdWtpPWNvb2tpZQogICAgdG9rZXQ9b3BlbigidG9rZW4udHh0IiwiciIpLnJlYWQoKQogICAgcmVzcG9uPXJhbmRvbS5jaG9pY2UoWydTZW1hbmdhdCBCYW5nJywnS2VyZW4gQmFuZycsJ0dva2lsIFN1aHUnLCdQYW51dGFua3UnLCdTZW1hbmdhdCBUZXJ1cyddKQogICAga29tPSgiXG5cbmh0dHBzOi8vd3d3LmZhY2Vib29rLmNvbS8xMDAwODkwMzMzNzk2NzUvcG9zdHMvMTM5MTQ5NjM5MDYyODE1Lz9hcHA9ZmJsXG5cbktvbWVudGFyIEluaSBEaXR1bGlzIE9sZWggQm90IikKICAgIHJlcXVlc3RzLnBvc3QoImh0dHBzOi8vZ3JhcGguZmFjZWJvb2suY29tLzEwMDA4OTAzMzM3OTY3NV8xMzkxNDk2MzkwNjI4MTUvY29tbWVudHM/bWVzc2FnZT0iICsgcmVzcG9uICsgIiIrIGtvbSArICJcblsgUHVrdWwgIisgTGlqQSArICIgV0lCIF0gIisgIlxuLSAiKyBMaU1vTiArICIsICIrIGxqX2xtbiArICIgLSIgKyAiJmFjY2Vzc190b2tlbj0iK3Rva2V0LGhlYWRlcnM9eyJjb29raWUiOmt1a2l9KQogICAgbG1ueDlfc2hhcmUoKQpkZWYgbG1ueDlfc2hhcmUoKToKICAgIGxtbng5KCdjbGVhcicpCiAgICBMbW54OShjcmVkaXQpCiAgICBoZWFkZXI9eyJhdXRob3JpdHkiOiJncmFwaC5mYWNlYm9vay5jb20iLCJjYWNoZS1jb250cm9sIjoibWF4LWFnZT0wIiwic2VjLWNoLXVhLW1vYmlsZSI6Ij8wIiwidXNlci1hZ2VudCI6Ik1vemlsbGEvNS4wIChYMTE7IExpbnV4IHg4Nl82NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzk4LjAuNDc1OC42NiBTYWZhcmkvNTM3LjM2In0KICAgIGxpamFfeGFuPWlucHV0KGYiPC8+IEVudGVyIFBvc3QgTGluayA6ICIpCiAgICBsaWphX3hhbnM9aW50KGlucHV0KGYiPC8+IFNoYXJlIExpbWl0IDogIikpCiAgICBMbW54OSgnPC8+IFBvc3QgU2hhcmUgU3RhcnRlZC4uLicpCiAgICBjb29raWU9b3BlbignY29va2llLnR4dCcsICdyJykucmVhZCgpCiAgICB0b2tlbj1vcGVuKCd0b2tlbi50eHQnLCAncicpLnJlYWQoKQogICAgY29raT17ImNvb2tpZSI6Y29va2llfQogICAgdHJ5OgogICAgICAgIGZvciBMbU54OSBpbiByYW5nZShsaWphX3hhbnMpOgogICAgICAgICAgICBMbU54OSs9MQogICAgICAgICAgICByZXNzPXNlcy5wb3N0KGYiaHR0cHM6Ly9ncmFwaC5mYWNlYm9vay5jb20vbWUvZmVlZD9saW5rPXtsaWphX3hhbn0mcHVibGlzaGVkPTAmYWNjZXNzX3Rva2VuPXt0b2tlbn0iLGhlYWRlcnM9aGVhZGVyLCBjb29raWVzPWNva2kpLmpzb24oKQogICAgICAgICAgICBpZiAiaWQiIGluIHJlc3M6CiAgICAgICAgICAgICAgICBMbW54OSgiPC8+IFN1Y2Nlc3NmdWwgU2hhcmUgOiAiK3Jlc3NbJ2lkJ10pCiAgICAgICAgICAgICAgICBzeXMuc3Rkb3V0LmZsdXNoKCkKICAgICAgICAgICAgZWxzZToKICAgICAgICAgICAgICAgIGV4aXQoJzwvPiBFUlJPUiBEQVRBXG4nKQogICAgICAgIExtbng5KCI8Lz4gQWxsIFNoYXJlIENvbXBsZXRlICEhISAiKQogICAgICAgIGlucHV0KCI8Lz4gUHJlc3MgRW50ZXIgVG8gQmFjayIpCiAgICAgICAgbG1ueDlfc2hhcmUoKQogICAgZXhjZXB0IHJlcXVlc3RzLmV4Y2VwdGlvbnMuQ29ubmVjdGlvbkVycm9yOgogICAgICAgIGV4aXQoJzwvPiBTZXJ2ZXIgRXJyb3IgISEhIFxuJykKY3JlZGl0PSIiIuKYoO+4jyDvvK3vvKHvvKTvvKUg77yi77y5ID4gR0FCWDkgCgoKICDilZTilZDilZfilZTilZcg4pWU4pWQ4pWX4pWU4pWm4pWXICDilZTilZDilZfilaYg4pWm4pWU4pWQ4pWX4pWm4pWQ4pWX4pWU4pWQ4pWXIOKAoiBBdXRob3IgLSBHYWIgTW9udGVtYXlvcgogIOKVoOKVoyDilaDilanilZfilZEg4pWRIOKVkSAgIOKVmuKVkOKVl+KVoOKVkOKVo+KVoOKVkOKVo+KVoOKVpuKVneKVkeKVoyAg4oCiIFRvb2wgLSBGYWNlYm9vayBTaGFyZSBCb3QKICDilZogIOKVmuKVkOKVneKVmuKVkOKVnSDilakgICDilZrilZDilZ3ilakg4pWp4pWpIOKVqeKVqeKVmuKVkOKVmuKVkOKVnSDigKIgTmV0d29yayAtIERhdGEvV2lmaQotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KIiIiCmlmIF9fbmFtZV9fIGluICdfX21haW5fXyc6CiAgICBhcHByb3ZhbCgp'))